emissions_cluster = emissions %>%
select(country_name, "2018","1998") %>%
mutate(change_in_co2 = emissions$"2018"- emissions$"1998") %>%
select(country_name, "2018", change_in_co2 ) %>%
rename(recent_co2 = "2018")
# Prepare GDP data for join
gdp_cluster = gdp %>%
select(country_name, "2018","1998") %>%
mutate(change_in_gdp = gdp$"2018"- gdp$"1998") %>%
select(country_name, "2018", change_in_gdp )%>%
rename(recent_gdp = "2018")
# Prepare population data for join
pop_cluster = pop %>%
select(country_name, "2018","1998") %>%
mutate(change_in_pop = pop$"2018"- pop$"1998") %>%
select(country_name, "2018", change_in_pop)%>%
rename(recent_pop = "2018")
first_merge = merge(emissions_cluster, gdp_cluster, by = 'country_name')
first_merge = merge(emissions_cluster, gdp_cluster, by = 'country_name')
final_cluster = merge(first_merge, pop_cluster, by = 'country_name')
final_cluster$recent_pop = as.numeric(final_cluster$recent_pop)
final_cluster$change_in_pop = as.numeric(final_cluster$change_in_pop)
## Clean for clustering
for_cluster = final_cluster
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster <- scale(for_cluster[,2:6]) # standardize variables
fit <- kmeans(for_cluster, 5) # 5 cluster solution
aggregate(for_cluster, by = list(fit$cluster), FUN= mean)
View(for_cluster)
for_cluster <- scale(for_cluster) # standardize variables
fit <- kmeans(for_cluster, 5) # 5 cluster solution
aggregate(for_cluster, by = list(fit$cluster), FUN= mean)
View(for_cluster)
## Clean for clustering
for_cluster = final_cluster
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster <- scale(for_cluster) # standardize variables
for_cluster <- scale(for_cluster[,2:6]) # standardize variables
View(for_cluster)
## Clean for clustering
for_cluster = final_cluster
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster <- scale(for_cluster[,2:6]) # standardize variables
View(for_cluster)
for_cluster <- data.frame(for_cluster, fit$cluster)
View(for_cluster)
for_cluster <- data.frame(for_clsuter, scale(for_cluster[,2:6])) # standardize variables
for_cluster <- data.frame(for_cluster, scale(for_cluster[,2:6])) # standardize variables
View(for_cluster)
first_merge = merge(emissions_cluster, gdp_cluster, by = 'country_name')
final_cluster = merge(first_merge, pop_cluster, by = 'country_name')
final_cluster$recent_pop = as.numeric(final_cluster$recent_pop)
final_cluster$change_in_pop = as.numeric(final_cluster$change_in_pop)
## Clean for clustering
for_cluster = final_cluster
## Clean for clustering
for_cluster = final_cluster
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster <- data.frame(for_cluster, scale(for_cluster[,2:6])) # standardize variables
View(for_cluster)
fit <- kmeans(for_cluster, 5) # 5 cluster solution
aggregate(for_cluster, by = list(fit$cluster), FUN= mean)
for_cluster <- data.frame(for_cluster, fit$cluster)
View(for_cluster)
for_cluster = for_cluster %>%
select(1, 8:12)
first_merge = merge(emissions_cluster, gdp_cluster, by = 'country_name')
final_cluster = merge(first_merge, pop_cluster, by = 'country_name')
final_cluster$recent_pop = as.numeric(final_cluster$recent_pop)
final_cluster$change_in_pop = as.numeric(final_cluster$change_in_pop)
## Clean for clustering
for_cluster = final_cluster
## Clean for clustering
for_cluster = final_cluster
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster <- data.frame(for_cluster, scale(for_cluster[,2:6])) # standardize variables
for_cluster = for_cluster %>%
select(1, 8:12)
View(for_cluster)
## Clean for clustering
for_cluster = final_cluster
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster <- data.frame(for_cluster, scale(for_cluster[,2:6])) # standardize variables
for_cluster = for_cluster %>%
select(1, 8:13)
## Clean for clustering
for_cluster = final_cluster
View(for_cluster)
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster <- data.frame(for_cluster, scale(for_cluster[,2:6])) # standardize variables
View(for_cluster)
## Clean for clustering
for_cluster = final_cluster
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster <- data.frame(for_cluster, scale(for_cluster[,2:7])) # standardize variables
for_cluster = for_cluster %>%
select(1, 8:13)
View(for_cluster)
for_cluster = for_cluster %>%
select(1, 8:13)
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster <- data.frame(for_cluster, scale(for_cluster[,2:7])) # standardize variables
for_cluster = for_cluster %>%
select(1, 8:13)
View(for_cluster)
fit <- kmeans(for_cluster, 5) # 5 cluster solution
aggregate(for_cluster, by = list(fit$cluster), FUN= mean)
for_cluster <- data.frame(for_cluster, fit$cluster)
View(for_cluster)
for_cluster = for_cluster %>%
select(country_name, fit.cluster)
View(for_cluster)
data_and_cluster = merge(final_cluster, for_cluster, by = 'country_name')
View(data_and_clsuter)
View(data_and_cluster)
View(data_and_cluster)
example_countries = data_and_cluster %>%
filter(fit.cluster == 2) %>%
filter(change_in_co2 < 0)
View(example_countries)
example_countries = data_and_cluster %>%
filter(fit.cluster == 2) #%>%
View(example_countries)
example_countries = data_and_cluster %>%
filter(fit.cluster == 4) #%>%
View(example_countries)
for (i in 2:15) wss[i] <- sum(kmeans(for_cluster,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
View(percent_by_quintile)
View(percent_by_quintile)
# Determine number of clusters
wss <- (nrow(for_cluster)-1)*sum(apply(for_cluster,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(for_cluster,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata <- for_cluster
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
fit <- kmeans(for_cluster, 7) # 5 cluster solution
aggregate(for_cluster, by = list(fit$cluster), FUN= mean)
for_cluster <- data.frame(for_cluster, fit$cluster)
for_cluster = for_cluster %>%
select(country_name, fit.cluster)
data_and_cluster = merge(final_cluster, for_cluster, by = 'country_name')
example_countries = data_and_cluster %>%
filter(fit.cluster == 4) #%>%
View(example_countries)
example_countries = data_and_cluster %>%
filter(fit.cluster == 2) #%>%
View(example_countries)
example_countries = data_and_cluster %>%
filter(fit.cluster == 1) #%>%
View(example_countries)
example_countries = data_and_cluster %>%
filter(fit.cluster == 7) #%>%
View(example_countries)
example_countries = data_and_cluster %>%
filter(fit.cluster == 7) #%>%
View(example_countries)
example_countries = data_and_cluster %>%
filter(fit.cluster == 6) #%>%
View(example_countries)
example_countries = data_and_cluster %>%
filter(fit.cluster ==5) #%>%
View(example_countries)
fit <- kmeans(for_cluster, 5) # 5 cluster solution
aggregate(for_cluster, by = list(fit$cluster), FUN= mean)
for_cluster <- data.frame(for_cluster, fit$cluster)
for_cluster = for_cluster %>%
select(country_name, fit.cluster)
data_and_cluster = merge(final_cluster, for_cluster, by = 'country_name')
example_countries = data_and_cluster %>%
filter(fit.cluster ==5) #%>%
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
example_countries = data_and_cluster %>%
filter(fit.cluster == "2") #%>%
graph = ggplot(data = example_countries, aes(x = country_name, y = change_in_co2))
graph + geom_bar(stat = 'identity')
graph = ggplot(data = example_countries, aes(x = country_name, y = change_in_co2))
graph + geom_bar(stat = 'identity')
runApp()
renew_kwh <- fread("./total_renewable_kwh.csv" , header = T) # <- Total energy (KwH) that comes from renewable sources
emissions <- fread("./co2_emissions.csv", header=T)
population <- fread("./population.csv" , header = T)
gdp <- fread("./gdp.csv", header=T)
#### Cluster Analysis ----------------------
#Prepare emissions data for join
emissions_cluster = emissions %>%
select(country_name, "2018","1998") %>%
mutate(change_in_co2 = emissions$"2018"- emissions$"1998") %>%
select(country_name, "2018", change_in_co2 ) %>%
rename(recent_co2 = "2018")
# Prepare GDP data for join
gdp_cluster = gdp %>%
select(country_name, "2018","1998") %>%
mutate(change_in_gdp = gdp$"2018"- gdp$"1998") %>%
select(country_name, "2018", change_in_gdp )%>%
rename(recent_gdp = "2018")
# Prepare population data for join
pop_cluster = pop %>%
select(country_name, "2018","1998") %>%
mutate(change_in_pop = pop$"2018"- pop$"1998") %>%
select(country_name, "2018", change_in_pop)%>%
rename(recent_pop = "2018")
first_merge = merge(emissions_cluster, gdp_cluster, by = 'country_name')
final_cluster = merge(first_merge, pop_cluster, by = 'country_name')
final_cluster$recent_pop = as.numeric(final_cluster$recent_pop)
final_cluster$change_in_pop = as.numeric(final_cluster$change_in_pop)
## Clean for clustering
for_cluster = final_cluster
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster <- data.frame(for_cluster, scale(for_cluster[,2:7])) # standardize variables
for_cluster = for_cluster %>%
select(1, 8:13)
fit <- kmeans(for_cluster, 5) # 5 cluster solution
aggregate(for_cluster, by = list(fit$cluster), FUN= mean)
for_cluster <- data.frame(for_cluster, fit$cluster)
for_cluster = for_cluster %>%
select(country_name, fit.cluster)
data_and_cluster = merge(final_cluster, for_cluster, by = 'country_name')
example_countries = data_and_cluster %>%
filter(fit.cluster == 2) %>%
filter(change_in_co2 < 0)
graph = ggplot(data = example_countries, aes(x = country_name, y = change_in_co2))
graph + geom_bar(stat = 'identity')
missions_cluster = emissions %>%
select(country_name, "2018","1998") %>%
mutate(change_in_co2 = emissions$"2018"- emissions$"1998") %>%
select(country_name, "2018", change_in_co2 ) %>%
rename(recent_co2 = "2018")
# Prepare GDP data for join
gdp_cluster = gdp %>%
select(country_name, "2018","1998") %>%
mutate(change_in_gdp = gdp$"2018"- gdp$"1998") %>%
select(country_name, "2018", change_in_gdp )%>%
rename(recent_gdp = "2018")
# Prepare population data for join
pop_cluster = pop %>%
select(country_name, "2018","1998") %>%
mutate(change_in_pop = pop$"2018"- pop$"1998") %>%
select(country_name, "2018", change_in_pop)%>%
rename(recent_pop = "2018")
### merge all data into one table
first_merge = merge(emissions_cluster, gdp_cluster, by = 'country_name')
final_cluster = merge(first_merge, pop_cluster, by = 'country_name')
final_cluster$recent_pop = as.numeric(final_cluster$recent_pop)
final_cluster$change_in_pop = as.numeric(final_cluster$change_in_pop)
## Clean for clustering
for_cluster = final_cluster
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster <- data.frame(for_cluster, scale(for_cluster[,2:7])) # standardize variables
for_cluster = for_cluster %>%
select(1, 8:13)
fit <- kmeans(for_cluster, 5) # 5 cluster solution
aggregate(for_cluster, by = list(fit$cluster), FUN= mean)
for_cluster <- data.frame(for_cluster, fit$cluster)
for_cluster = for_cluster %>%
select(country_name, fit.cluster)
data_and_cluster = merge(final_cluster, for_cluster, by = 'country_name')
example_countries = data_and_cluster %>%
filter(fit.cluster == 2) %>%
filter(change_in_co2 < 0)
graph = ggplot(data = example_countries, aes(x = country_name, y = change_in_co2))
graph + geom_bar(stat = 'identity')
graph = ggplot(data = example_countries, aes(x = country_name, y = change_in_co2))
graph + geom_bar(stat = 'identity')
runApp()
runApp()
runApp()
runApp()
fit <- kmeans(for_cluster, 5) # 5 cluster solution
for_cluster <- data.frame(for_cluster, fit$cluster)
emissions <- fread("./co2_emissions.csv", header=T)
renewable <- fread("./renewable_energy.csv" , header = T) # <- % of total energy that comes from renewable sources
renew_kwh <- fread("./total_renewable_kwh.csv" , header = T) # <- Total energy (KwH) that comes from renewable sources
gdp <- fread('./gdp.csv', header = T)
pop <- fread('./population.csv', header=T)
emissions_cluster = emissions %>%
select(country_name, "2018","1998") %>%
mutate(change_in_co2 = emissions$"2018"- emissions$"1998") %>%
select(country_name, "2018", change_in_co2 ) %>%
rename(recent_co2 = "2018")
# Prepare GDP data for join
gdp_cluster = gdp %>%
select(country_name, "2018","1998") %>%
mutate(change_in_gdp = gdp$"2018"- gdp$"1998") %>%
select(country_name, "2018", change_in_gdp )%>%
rename(recent_gdp = "2018")
# Prepare population data for join
pop_cluster = pop %>%
select(country_name, "2018","1998") %>%
mutate(change_in_pop = pop$"2018"- pop$"1998") %>%
select(country_name, "2018", change_in_pop)%>%
rename(recent_pop = "2018")
first_merge = merge(emissions_cluster, gdp_cluster, by = 'country_name')
final_cluster = merge(first_merge, pop_cluster, by = 'country_name')
final_cluster$recent_pop = as.numeric(final_cluster$recent_pop)
final_cluster$change_in_pop = as.numeric(final_cluster$change_in_pop)
## Clean for clustering
for_cluster = final_cluster
View(for_cluster)
for_cluster <- for_cluster[!is.infinite(rowSums(for_cluster)),]
for_cluster = na.omit(for_cluster) ## Remove NAs
## Clean for clustering
for_cluster = final_cluster
#for_cluster <- for_cluster[!is.infinite(rowSums(for_cluster)),]
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster <- data.frame(for_cluster, scale(for_cluster[,2:7])) # standardize variables
for_cluster = for_cluster %>%
select(1, 8:13)
fit <- kmeans(for_cluster, 5) # 5 cluster solution
for_cluster <- data.frame(for_cluster, fit$cluster)
for_cluster = for_cluster %>%
select(country_name, fit.cluster)
emissions_cluster = emissions %>%
select(country_name, "2018","1998") %>%
mutate(change_in_co2 = emissions$"2018"- emissions$"1998") %>%
select(country_name, "2018", change_in_co2 ) %>%
rename(recent_co2 = "2018")
# Prepare GDP data for join
gdp_cluster = gdp %>%
select(country_name, "2018","1998") %>%
mutate(change_in_gdp = gdp$"2018"- gdp$"1998") %>%
select(country_name, "2018", change_in_gdp )%>%
rename(recent_gdp = "2018")
# Prepare population data for join
pop_cluster = pop %>%
select(country_name, "2018","1998") %>%
mutate(change_in_pop = pop$"2018"- pop$"1998") %>%
select(country_name, "2018", change_in_pop)%>%
rename(recent_pop = "2018")
emissions_cluster = emissions %>%
select(country_name, "2018","1998") %>%
mutate(change_in_co2 = emissions$"2018"- emissions$"1998") %>%
select(country_name, "2018", change_in_co2 ) %>%
rename(recent_co2 = "2018")
# Prepare GDP data for join
gdp_cluster = gdp %>%
select(country_name, "2018","1998") %>%
mutate(change_in_gdp = gdp$"2018"- gdp$"1998") %>%
select(country_name, "2018", change_in_gdp )%>%
rename(recent_gdp = "2018")
library(dplyr)
library(ggplot2)
library(data.table)
library(tidyr)
emissions <- fread("./co2_emissions.csv", header=T)
renewable <- fread("./renewable_energy.csv" , header = T) # <- % of total energy that comes from renewable sources
renew_kwh <- fread("./total_renewable_kwh.csv" , header = T) # <- Total energy (KwH) that comes from renewable sources
gdp <- fread('./gdp.csv', header = T)
pop <- fread('./population.csv', header=T)
emissions_cluster = emissions %>%
select(country_name, "2018","1998") %>%
mutate(change_in_co2 = emissions$"2018"- emissions$"1998") %>%
select(country_name, "2018", change_in_co2 ) %>%
rename(recent_co2 = "2018")
# Prepare GDP data for join
gdp_cluster = gdp %>%
select(country_name, "2018","1998") %>%
mutate(change_in_gdp = gdp$"2018"- gdp$"1998") %>%
select(country_name, "2018", change_in_gdp )%>%
rename(recent_gdp = "2018")
# Prepare population data for join
pop_cluster = pop %>%
select(country_name, "2018","1998") %>%
mutate(change_in_pop = pop$"2018"- pop$"1998") %>%
select(country_name, "2018", change_in_pop)%>%
rename(recent_pop = "2018")
first_merge = merge(emissions_cluster, gdp_cluster, by = 'country_name')
final_cluster = merge(first_merge, pop_cluster, by = 'country_name')
final_cluster$recent_pop = as.numeric(final_cluster$recent_pop)
final_cluster$change_in_pop = as.numeric(final_cluster$change_in_pop)
## Clean for clustering
for_cluster = final_cluster
#for_cluster <- for_cluster[!is.infinite(rowSums(for_cluster)),]
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster <- data.frame(for_cluster, scale(for_cluster[,2:7])) # standardize variables
for_cluster = for_cluster %>%
select(1, 8:13)
fit <- kmeans(for_cluster, 5) # 5 cluster solution
#for_cluster <- for_cluster[!is.infinite(rowSums(for_cluster)),]\
for_cluster[is.infinite(for_cluster)] <- NA
for_cluster[rowSumsis.na(for_cluster) | is.infinite(for_cluster)) == 0, ]
for_cluster[rowSumsis.na(for_cluster) | is.infinite(for_cluster) == 0, ]
for_cluster[is.na(for_cluster) | is.infinite(for_cluster) == 0, ]
for_cluster <- for_cluster[is.finite(rowSums(for_cluster)),]
library(dplyr)
library(ggplot2)
library(data.table)
library(tidyr)
emissions <- fread("./co2_emissions.csv", header=T)
renewable <- fread("./renewable_energy.csv" , header = T) # <- % of total energy that comes from renewable sources
renew_kwh <- fread("./total_renewable_kwh.csv" , header = T) # <- Total energy (KwH) that comes from renewable sources
gdp <- fread('./gdp.csv', header = T)
pop <- fread('./population.csv', header=T)
emissions_cluster = emissions %>%
select(country_name, "2018","1998") %>%
mutate(change_in_co2 = emissions$"2018"- emissions$"1998") %>%
select(country_name, "2018", change_in_co2 ) %>%
rename(recent_co2 = "2018")
# Prepare GDP data for join
gdp_cluster = gdp %>%
select(country_name, "2018","1998") %>%
mutate(change_in_gdp = gdp$"2018"- gdp$"1998") %>%
select(country_name, "2018", change_in_gdp )%>%
rename(recent_gdp = "2018")
# Prepare population data for join
pop_cluster = pop %>%
select(country_name, "2018","1998") %>%
mutate(change_in_pop = pop$"2018"- pop$"1998") %>%
select(country_name, "2018", change_in_pop)%>%
rename(recent_pop = "2018")
first_merge = merge(emissions_cluster, gdp_cluster, by = 'country_name')
final_cluster = merge(first_merge, pop_cluster, by = 'country_name')
final_cluster$recent_pop = as.numeric(final_cluster$recent_pop)
final_cluster$change_in_pop = as.numeric(final_cluster$change_in_pop)
## Clean for clustering
for_cluster = final_cluster
#for_cluster <- for_cluster[!is.infinite(rowSums(for_cluster)),]\
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster[2:7] <- for_cluster[2:7][is.finite(rowSums(for_cluster[2:7])),]
#for_cluster <- for_cluster[!is.infinite(rowSums(for_cluster)),]\
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster <- data.frame(for_cluster, scale(for_cluster[,2:7])) # standardize variables
for_cluster = for_cluster %>%
select(1, 8:13)
fit <- kmeans(for_cluster, 5) # 5 cluster solution
View(for_cluster)
for_cluster[,2:7] <- for_cluster[,2:7][is.finite(rowSums(for_cluster[,2:7])),]
for_cluster <- data.frame(for_cluster, scale(for_cluster[,2:7])) # standardize variables
for_cluster = for_cluster %>%
select(1, 8:13)
fit <- kmeans(for_cluster, 5) # 5 cluster solution
fit <- kmeans(for_cluster[,2:7], 5) # 5 cluster solution
for_cluster <- data.frame(for_cluster, fit$cluster)
for_cluster = for_cluster %>%
select(country_name, fit.cluster)
data_and_cluster = merge(final_cluster, for_cluster, by = 'country_name')
example_countries = data_and_cluster %>%
filter(fit.cluster == 2) %>%
filter(change_in_co2 < 0)
graph = ggplot(data = example_countries, aes(x = country_name, y = change_in_co2))
graph + geom_bar(stat = 'identity')
library(dplyr)
library(ggplot2)
library(data.table)
library(tidyr)
emissions <- fread("./co2_emissions.csv", header=T)
renewable <- fread("./renewable_energy.csv" , header = T) # <- % of total energy that comes from renewable sources
renew_kwh <- fread("./total_renewable_kwh.csv" , header = T) # <- Total energy (KwH) that comes from renewable sources
gdp <- fread('./gdp.csv', header = T)
pop <- fread('./population.csv', header=T)
emissions_cluster = emissions %>%
select(country_name, "2018","1998") %>%
mutate(change_in_co2 = emissions$"2018"- emissions$"1998") %>%
select(country_name, "2018", change_in_co2 ) %>%
rename(recent_co2 = "2018")
# Prepare GDP data for join
gdp_cluster = gdp %>%
select(country_name, "2018","1998") %>%
mutate(change_in_gdp = gdp$"2018"- gdp$"1998") %>%
select(country_name, "2018", change_in_gdp )%>%
rename(recent_gdp = "2018")
# Prepare population data for join
pop_cluster = pop %>%
select(country_name, "2018","1998") %>%
mutate(change_in_pop = pop$"2018"- pop$"1998") %>%
select(country_name, "2018", change_in_pop)%>%
rename(recent_pop = "2018")
first_merge = merge(emissions_cluster, gdp_cluster, by = 'country_name')
final_cluster = merge(first_merge, pop_cluster, by = 'country_name')
final_cluster$recent_pop = as.numeric(final_cluster$recent_pop)
final_cluster$change_in_pop = as.numeric(final_cluster$change_in_pop)
## Clean for clustering
for_cluster = final_cluster
#for_cluster <- for_cluster[!is.infinite(rowSums(for_cluster)),]\
for_cluster = na.omit(for_cluster) ## Remove NAs
for_cluster[,2:7] <- for_cluster[,2:7][is.finite(rowSums(for_cluster[,2:7])),]
for_cluster <- data.frame(for_cluster, scale(for_cluster[,2:7])) # standardize variables
for_cluster = for_cluster %>%
select(1, 8:13)
fit <- kmeans(for_cluster[,2:7], 5) # 5 cluster solution
for_cluster <- data.frame(for_cluster, fit$cluster)
for_cluster = for_cluster %>%
select(country_name, fit.cluster)
data_and_cluster = merge(final_cluster, for_cluster, by = 'country_name')
example_countries = data_and_cluster %>%
filter(fit.cluster == 2) %>%
filter(change_in_co2 < 0)
graph = ggplot(data = example_countries, aes(x = country_name, y = change_in_co2))
graph + geom_bar(stat = 'identity')
runApp()
runApp()

scale_y_discrete(name = 'CO2 Emissions (kt)')+
scale_x_discrete(name = "Year",limits = c('1960','1965', '1970',
'1975', '1980','1985' ,'1990',
'1995', '2000','2005','2010','2018'))
emis_line = ggplot(data = na.omit(quints), aes(x = year, y = emission, fill = as.factor(quintile)))
emis_line + geom_bar(stat = 'identity', position = 'dodge', las = 1) +
scale_y_discrete(name = 'CO2 Emissions (kt)')+
scale_x_discrete(name = "Year",limits = c('1960','1965', '1970',
'1975', '1980','1985' ,'1990',
'1995', '2000','2005','2010','2018'))
emis_line + geom_bar(stat = 'identity', position = 'dodge') +
scale_y_discrete(name = 'CO2 Emissions (kt)')+
scale_x_discrete(name = "Year",limits = c('1960','1965', '1970',
'1975', '1980','1985' ,'1990',
'1995', '2000','2005','2010','2018')) + coord_flip()
runApp()
e = emissions
e$quintile <- ntile(e$"2018" , 5)
e = select(e, -1:-4)
quints = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission') %>%
arrange("2018") %>% filter(qunitile == 5)%>% filter(year == input$year)
emis_line = ggplot(data = na.omit(quints), aes(x = country_name, y = emission))
emis_line + geom_bar(stat = 'identity', position = 'dodge') +
scale_y_discrete(name = 'CO2 Emissions (kt)')+
scale_x_discrete(name = "Country") + coord_flip()
e = emissions
e$quintile <- ntile(e$"2018" , 5)
quints = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission') %>%
arrange("2018") %>% filter(qunitile == 5)%>% filter(year == input$year)
emis_line = ggplot(data = na.omit(quints), aes(x = country_name, y = emission))
emis_line + geom_bar(stat = 'identity', position = 'dodge') +
scale_y_discrete(name = 'CO2 Emissions (kt)')+
scale_x_discrete(name = "Country") + coord_flip()
quints = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission') %>%
arrange("2018") %>% filter(qunitile == 5)%>% filter(year == input$year) %>%
arrange(desc(emissions)) %>% slice(1:10)
quints = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission') %>%
arrange("2018") %>% filter(quartile == 5)%>% filter(year == input$year) %>%
arrange(desc(emissions)) %>% slice(1:10)
e = emissions
e$quintile <- ntile(e$"2018" , 5)
quints = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission') %>%
arrange("2018") %>% filter(quintile == 5)%>% filter(year == input$year) %>%
arrange(desc(emissions)) %>% slice(1:10)
quints = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission') %>%
arrange("2018") %>% filter(quintile == 5)%>% filter(year == "input$year"=="2012") %>%
arrange(desc(emissions)) %>% slice(1:10)
emis_line = ggplot(data = na.omit(quints), aes(x = country_name, y = emission))
emis_line + geom_bar(stat = 'identity', position = 'dodge') +
scale_y_discrete(name = 'CO2 Emissions (kt)')+
scale_x_discrete(name = "Country") + coord_flip()
e = emissions
e$quintile <- ntile(e$"2018" , 5)
quints = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission') %>%
arrange("2018") %>% filter(quintile == 5)%>% filter(year == "input$year"=="2012") %>%
arrange(desc(emissions)) %>% slice(1:10)
View(e)
quints = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission') %>%
arrange("2018") %>% filter(quintile == 5)%>% filter(year == "input$year"=="2012")
View(quints)
quints = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission') %>% filter(quintile == 5)%>% filter(year == "input$year"=="2012") %>%
arrange(emission)
%>%
quints = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission') %>%
filter(quintile == 5)%>% filter(year == "input$year"=="2012") %>%
arrange()
quints = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission') %>%
filter(quintile == 5)%>% filter(year == "input$year"=="2012")
quints = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission') %>%
filter(quintile == 5)%>% filter(year == "2012")
View(quints)
runApp()
View(e)
View(e)
View(ren)
runApp()
e = emissions
e$quintile <- ntile(e$"2018" , 5)
e = select(e, -1:-4)
shiny::runApp()
# Create percentage of emission by grouped quartile
v = quints_grouped %>%
group_by(quintile) %>%
mutate(percent_of_emission = emission/sum(emission))
# Create percentage of emission by grouped quartile
v = quints_grouped %>%
group_by(quintile) %>%
mutate(percent_of_emission = emission/sum(emission))
## Build Population Scatter Plots ---------------------------------------------------------------------------------
population <- fread("./population.csv" , header = T)
# Create percentage of emission by grouped quartile
v = quints_grouped %>%
group_by(quintile) %>%
mutate(percent_of_emission = emission/sum(emission))
# Create percentage of emission by grouped quartile
v = quints %>%
group_by(quintile) %>%
mutate(percent_of_emission = emission/sum(emission))
View(v)
# Create percentage of emission by grouped quartile
v = quints %>%
group_by(quintile) %>%
mutate(percent_of_emission = (emission/sum(emission))*100)
View(v)
emissions <- fread("./co2_emissions.csv", header=T)
renewable <- fread("./renewable_energy.csv" , header = T) # <- % of total energy that comes from renewable sources
renew_kwh <- fread("./total_renewable_kwh.csv" , header = T) # <- Total energy (KwH) that comes from renewable sources
View(emissions)
# Create percentage of emission by grouped quartile
v = quints %>%
group_by(quintile) %>%
mutate(percent_of_emission = (emission/sum(emission))*100)
View(v)
?select
# Create percentage of emission by grouped quartile
v = quints %>%
group_by(quintile) %>%
mutate(percent_of_emission = (emission/sum(emission))*100) %>%
select(quintile, year, percent_of_emission)
View(v)
v = v %>% group_by(quintile, year)
View(v)
# Create percentage of emission by grouped quartile
v = quints %>%
group_by(quintile) %>%
mutate(percent_of_emission = (emission/sum(emission))*100) %>%
select(quintile, year, percent_of_emission)
View(v)
# Create percentage of emission by grouped quartile
v = e %>%
group_by(quintile) %>%
mutate(percent_of_emission = (emission/sum(emission))*100) %>%
select(quintile, year, percent_of_emission)
v = v %>% group_by(quintile, year)
View(e)
e = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission')
v = e %>%
group_by(quintile) %>%
mutate(percent_of_emission = (emission/sum(emission))*100) %>%
select(quintile, year, percent_of_emission)
View(v)
v = v %>% group_by(quintile, year)
View(v)
percent_by_quintile= ggplot(data = na.omit(v), aes(x = year, y = emission, fill = as.factor(quintile)))
percent_by_quintile + geom_bar(stat = 'identity', position = 'dodge') +
scale_y_discrete(name = 'CO2 Emissions (kt)')+
scale_x_discrete(name = "Year",limits = c('1960','1965', '1970',
'1975', '1980','1985' ,'1990',
'1995', '2000','2005','2010','2018')) + coord_flip()
percent_by_quintile= ggplot(data = na.omit(v), aes(x = year, y = percent_of_emission, fill = as.factor(quintile)))
percent_by_quintile + geom_bar(stat = 'identity', position = 'dodge') +
scale_y_discrete(name = 'CO2 Emissions (kt)')+
scale_x_discrete(name = "Year",limits = c('1960','1965', '1970',
'1975', '1980','1985' ,'1990',
'1995', '2000','2005','2010','2018')) + coord_flip()
percent_by_quintile= ggplot(data = na.omit(v), aes(x = quintile, y = percent_of_emission, fill = as.factor(quintile)))
percent_by_quintile + geom_bar(stat = 'identity', position = 'dodge') +
scale_y_discrete(name = 'CO2 Emissions (kt)')+
scale_x_discrete(name = "Year",limits = c('1960','1965', '1970',
'1975', '1980','1985' ,'1990',
'1995', '2000','2005','2010','2018')) + coord_flip()
percent_by_quintile= ggplot(data = na.omit(v), aes(x = as.factor(quintile), y = percent_of_emission))
percent_by_quintile + geom_bar(stat = 'identity', position = 'dodge')#+
View(v)
e = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission')
v = e %>%
group_by(quintile) %>%
mutate(percent_of_emission = (emission/sum(emission))*100) %>%
select(quintile, year, percent_of_emission)
e = emissions
e = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission')
v = e %>%
group_by(quintile) %>%
mutate(percent_of_emission = (emission/sum(emission))*100) %>%
select(quintile, year, percent_of_emission)
e$quintile <- ntile(e$"2018" , 5)
e = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission')
v = e %>%
group_by(quintile) %>%
mutate(percent_of_emission = (emission/sum(emission))*100) %>%
select(quintile, year, percent_of_emission)
e = emissions
e$quintile <- ntile(e$"2018" , 5)
e = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission')
View(e)
v = e %>%
group_by(quintile) %>%
mutate(percent_of_emission = (emission/sum(emission))*100) %>%
select(quintile, year, percent_of_emission)
View(v)
v = e %>%
group_by(quintile) %>%
mutate(percent_of_emission = (emission/sum(emission))*100) %>%
select(quintile, year, percent_of_emission, emission)
v = v %>% group_by(quintile, year)
View(v)
v = v %>% group_by(quintile, year)
View(ren)
e = emissions
e$quintile <- ntile(e$"2018" , 10)
View(e)
e <- e %>%
filter(year == '2018') %>%
select(country_code, 2018)
e <- e %>%
select(country_code, 2018)
e <- e %>%
select(country_code, "2018")
View(e)
e <- e %>%
select(country_code, "2018", quintile)
e = emissions
e$quintile <- ntile(e$"2018" , 10)
e <- e %>%
select(country_code, "2018", quintile)
View(e)
View(renew)
View(ren)
rnm = renew_for_merge %>%
select(country_name, country_code, "2018", kwh_renewable)
View(renew_for_merge)
renew_for_merge = renew_kwh
View(renew_for_merge)
rnm = renew_for_merge %>%
select(country_name, country_code, "2015", kwh_renewable)
renew_for_merge = renew_kwh
rnm = renew_for_merge %>%
select(country_name, country_code, "2015", kwh_renewable)
rnm = renew_for_merge %>%
select(country_name, country_code, "2015")
View(rnm)
rnm = rnm %>% rename(2015 = renewable_energy)
rnm = rnm %>% rename("2015" = renewable_energy)
rnm = rnm %>% rename(renewable_energy = "2015" )
View(rnm)
renew_and_emission = merge(rnm, e, by = "country_code")
View(renew_and_emission)
renew_and_emission = renew_and_emission %>% rename(emission = "2018")
gg = ggplot(data = renew_and_emission, aes(x = as.factor(quintile), y = renewable_energy))
gg + geom_bar(stat = 'identity')
gg = ggplot(data = na.omit(renew_and_emission), aes(x = as.factor(quintile), y = renewable_energy, fill = as.factor(quintile)))
gg + geom_bar(stat = 'identity')
e = emissions
e$quintile <- ntile(e$"2018" , 5)
View(e)
e$quintile <- ntile(e$"2018" , 5)
e = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission')
View(e)
v = e %>%
group_by(quintile) %>%
mutate(percent_of_emission = (emission/sum(emission))*100) %>%
select(quintile, year, percent_of_emission, emission)
v = v %>% group_by(quintile, year)
View(v)
v = e %>%
group_by(quintile) %>% filter(year = "2018") %>%
mutate(percent_of_emission = (emission/sum(emission))*100) %>%
select(quintile, year, percent_of_emission, emission)
v = e %>%
group_by(quintile) %>% filter(year == "2018") %>%
mutate(percent_of_emission = (emission/sum(emission))*100) %>%
select(quintile, year, percent_of_emission, emission)
v = e %>%
group_by(quintile) %>% filter(year == "2018") %>%
mutate(percent_of_emission = (emission/sum(emission))*100) %>%
select(quintile, year, percent_of_emission, emission)
v = v %>% group_by(quintile, year)
View(v)
v = v %>% group_by(quintile, year)
View(v)
v = e %>%
group_by(quintile) %>% filter(year == "2018") %>%
summarise(percent_of_emission = (emission/sum(emission))*100) %>%
select(quintile, year, percent_of_emission, emission)
e = emissions
e$quintile <- ntile(e$"2018" , 5)
total_emissions = sum(e$"2018")
total_emissions
total_emissions = sum(e$2018)
e$"2018"
total_emissions = sum(na.omit(e$"2018"))
total_emissions
e = emissions
e$quintile <- ntile(e$"2018" , 5)
e = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission')
total_emissions = sum(na.omit(e$"2018"))
v = e %>%
group_by(quintile, year) %>%
summarise(percent_of_emission = (sum(emission)/total_emissions)*100) %>%
filter(year == "2018") %>%
select(quintile, year, percent_of_emission, emission)
e = emissions
e$quintile <- ntile(e$"2018" , 5)
e = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission')
total_emissions = sum(na.omit(e$"2018"))
total_emissions = sum(na.omit(emissions$"2018"))
v = e %>%
group_by(quintile, year) %>%
summarise(percent_of_emission = (sum(emission)/total_emissions)*100) %>%
filter(year == "2018") %>%
select(quintile, year, percent_of_emission, emission)
total_emissions
v = e %>%
group_by(quintile, year) %>%
summarise(percent_of_emission = (sum(emission)/total_emissions)*100) %>%
filter(year == "2018") %>%
select(quintile, year, percent_of_emission, emission)
View(e)
v = e %>%
group_by(quintile, year) %>%
summarise(percent_of_emission = (sum(emission)/total_emissions)*100) %>%
filter(year == "2018") %>%
select(quintile, year, percent_of_emission)
v = e %>%
group_by(quintile, year) %>%
summarise(percent_of_emission = (sum(emission)/total_emissions)*100) %>%
filter(year == "2018")
e = emissions
e$quintile <- ntile(e$"2018" , 5)
e = e %>%
pivot_longer(cols = (starts_with('19') | starts_with('20')), names_to = 'year' , values_to = 'emission')
total_emissions = sum(na.omit(emissions$"2018"))
v = e %>%
group_by(quintile, year) %>%
summarise(percent_of_emission = (sum(emission)/total_emissions)*100) %>%
filter(year == "2018")
v = e %>%
group_by(quintile, year) %>%
summarise(percent_of_emission = (sum(emission)/total_emissions)*100) %>%
filter(year == "2018")
View(v)
percent_by_quintile= ggplot(data = na.omit(v), aes(x = as.factor(quintile), y = percent_of_emission))
percent_by_quintile + geom_bar(stat = 'identity', position = 'dodge')
runApp()
output$quintile_percent = renderTable(v)
runApp()
runApp()
v = e %>%
group_by(quintile, year) %>%
summarise(percent_of_emission = (sum(emission)/total_emissions)*100) %>%
filter(year == '2018')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
e = emissions
e$quintile <- ntile(e$"2015" , 10)
e <- e %>%
select(country_code, "2015", quintile)
renew_for_merge = renew_kwh
rnm = renew_for_merge %>%
select(country_name, country_code, "2015")
rnm = rnm %>% rename(renewable_energy = "2015" )
renew_and_emission = renew_and_emission %>% rename(emission = "2015")
gg = ggplot(data = na.omit(renew_and_emission), aes(x = as.factor(quintile), y = renewable_energy, fill = as.factor(quintile)))
gg + geom_bar(stat = 'identity')
e = emissions
e$quintile <- ntile(e$"2015" , 10)
e <- e %>%
select(country_code, "2015", quintile)
renew_for_merge = renew_kwh
rnm = renew_for_merge %>%
select(country_name, country_code, "2015")
rnm = rnm %>% rename(renewable_energy = "2015" )
renew_and_emission = renew_and_emission %>% rename(emission = "2015")
gg = ggplot(data = na.omit(renew_and_emission), aes(x = as.factor(quintile), y = renewable_energy, fill = as.factor(quintile)))
gg + geom_bar(stat = 'identity')
runApp()
runApp()
runApp()
View(emissions)
e = emissions
e$quintile <- ntile(e$"2015" , 10)
e <- e %>%
select(country_code, "2015", quintile)
renew_for_merge = renew_kwh
rnm = renew_for_merge %>%
select(country_name, country_code, "2015")
rnm = rnm %>% rename(renewable_energy = "2015" )
renew_and_emission = renew_and_emission %>% rename(emission = "2015")
gg = ggplot(data = na.omit(renew_and_emission), aes(x = as.factor(quintile), y = renewable_energy, fill = as.factor(quintile)))
gg + geom_bar(stat = 'identity')
runApp()
emissions <- fread("./co2_emissions.csv", header=T)
e = emissions
e$quintile <- ntile(e$"2015" , 10)
e <- e %>%
select(country_code, "2015", quintile)
renew_for_merge = renew_kwh
rnm = renew_for_merge %>%
select(country_name, country_code, "2015")
rnm = rnm %>% rename(renewable_energy = "2015" )
renew_and_emission = renew_and_emission %>% rename(emission = "2015")
gg22 = ggplot(data = na.omit(renew_and_emission), aes(x = as.factor(quintile), y = renewable_energy, fill = as.factor(quintile)))
gg22 + geom_bar(stat = 'identity')
gg22 = ggplot(data = na.omit(renew_and_emission), aes(x = as.factor(quintile), y = renewable_energy, fill = as.factor(quintile)))
gg22 + geom_bar(stat = 'identity')
e = emissions
e$quintile <- ntile(e$"2015" , 10)
e <- e %>%
select(country_code, "2015", quintile)
renew_for_merge = renew_kwh
rnm = renew_for_merge %>%
select(country_name, country_code, "2015")
rnm = rnm %>% rename(renewable_energy = "2015" )
renew_and_emission = renew_and_emission %>% rename(emission = "2015")
gg22 = ggplot(data = na.omit(renew_and_emission), aes(x = as.factor(quintile), y = renewable_energy, fill = as.factor(quintile)))
gg22 + geom_bar(stat = 'identity')
e = emissions
e$quintile <- ntile(e$"2015" , 10)
e <- e %>%
select(country_code, "2015", quintile)
renew_for_merge = renew_kwh
rnm = renew_for_merge %>%
select(country_name, country_code, "2015")
rnm = rnm %>% rename(renewable_energy = "2015" )
renew_and_emission = renew_and_emission %>% rename(emission = "2015")
gg22 = ggplot(data = na.omit(renew_and_emission), aes(x = as.factor(quintile), y = renewable_energy, fill = as.factor(quintile)))
gg22 + geom_bar(stat = 'identity')
View(rnm)
e = emissions
e$quintile <- ntile(e$"2015" , 10)
e <- e %>%
select(country_code, "2015", quintile)
renew_for_merge = renew_kwh
rnm = renew_for_merge %>%
select(country_name, country_code, "2015")
rnm = rnm %>% rename(renewable_energy = "2015" )
#renew_and_emission = renew_and_emission %>% rename(emission = "2015")
gg22 = ggplot(data = na.omit(renew_and_emission), aes(x = as.factor(quintile), y = renewable_energy, fill = as.factor(quintile)))
gg22 + geom_bar(stat = 'identity')
runApp()
View(renew_and_emission)
library(dplyr)
library(ggplot2)
library(data.table)
library(tidyr)
emissions <- fread("./co2_emissions.csv", header=T)
renewable <- fread("./renewable_energy.csv" , header = T) # <- % of total energy that comes from renewable sources
renew_kwh <- fread("./total_renewable_kwh.csv" , header = T) # <- Total energy (KwH) that comes from renewable sources
e = emissions
e$quintile <- ntile(e$"2015" , 10)
e <- e %>%
select(country_code, "2015", quintile)
renew_for_merge = renew_kwh
rnm = renew_for_merge %>%
select(country_name, country_code, "2015")
rnm = rnm %>% rename(renewable_energy = "2015" )
renew_and_emission = renew_and_emission %>% rename(emission = "2015")
gg22 = ggplot(data = na.omit(renew_and_emission), aes(x = as.factor(quintile), y = renewable_energy, fill = as.factor(quintile)))
gg22 + geom_bar(stat = 'identity')
e = emissions
e$quintile <- ntile(e$"2015" , 10)
e <- e %>%
select(country_code, "2015", quintile)
renew_for_merge = renew_kwh
rnm = renew_for_merge %>%
select(country_name, country_code, "2015")
rnm = rnm %>% rename(renewable_energy = "2015" )
renew_and_emission = renew_and_emission %>% rename(emission = "2015")
emissions <- fread("./co2_emissions.csv", header=T)
renewable <- fread("./renewable_energy.csv" , header = T) # <- % of total energy that comes from renewable sources
renew_kwh <- fread("./total_renewable_kwh.csv" , header = T) # <- Total energy (KwH) that comes from renewable sources
e = emissions
e$quintile <- ntile(e$"2015" , 10)
e <- e %>%
select(country_code, "2015", quintile)
View(e)
e = e %>% rename(emissions = "2015")
View(e)
renew_for_merge = renew_kwh
rnm = renew_for_merge %>%
select(country_name, country_code, "2015")
rnm = renew_for_merge %>%
select(country_name, country_code, "2015")
rnm = rnm %>% rename(renewable_energy = "2015" )
renew_and_emission = merge(e, rnm, by = 'coutnry_code')
renew_and_emission = merge(e, rnm, by = 'country_code')
gg = ggplot(data = na.omit(renew_and_emission), aes(x = as.factor(quintile), y = renewable_energy, fill = as.factor(quintile)))
gg + geom_bar(stat = 'identity')
runApp()
runApp()
